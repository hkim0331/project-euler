(ns hkim0331.p45)

; Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

; Triangle   Tn=n(n+1)/2   1, 3, 6, 10, 15, ...
; Pentagonal   Pn=n(3n−1)/2   1, 5, 12, 22, 35, ...
; Hexagonal   Hn=n(2n−1)   1, 6, 15, 28, 45, ...
; It can be verified that T285 = P165 = H143 = 40755.

; Find the next triangle number that is also pentagonal and hexagonal.

(defn tri [n]
  (/ (* n (+ n 1)) 2))

(defn penta [n]
  (/ (* n (- (* 3 n) 1)) 2))

(defn hexa [n]
  (* n (- (* 2 n) 1)))

(= (tri 285) (penta 165) (hexa 143))
;true

(defn tph [t p h]
   (cond
    (= (tri t) (penta p) (hexa h)) [t p h]
    (< (tri t) (penta p))  (recur (+ 1 t) p h)
    (< (penta p) (hexa h)) (recur t (+ 1 p) h)
    (< (hexa h) (tri t))   (recur t p (+ 1 h))
    :else "error"))

; 大学マック
;(time (tph 285 165 (+ 143 1))
; "Elapsed time: 143.064798 msecs"
; [55385 31977 27693]

; 家マック
;(time (tph 285 165 (+ 143 1)))
;"Elapsed time: 37.088093 msecs"
; [55385 31977 27693]
; あれ？昼間よりかなりスピードアップした。
; なぜに？パソコン違うか。
; 大学のマックの方がスペックは上のはずだが？
; 後でもう一度確認してみよう。

;;村上の回答見てバージョンアップ。
;;そうか、tri number は hexa number だったか。
(defn ph' [p h]
   (cond
    (= (penta p) (hexa h)) [p h]
    (< (penta p) (hexa h)) (recur (+ 1 p) h)
    (> (penta p) (hexa h)) (recur p (+ 1 h))))

(time (ph' 165 144))
;"Elapsed time: 23.766532 msecs"
; "Elapsed time: 59.005417 msecs"
; [31977 27693]

;; ローカル変数と評価の順番を変え、姑息にスピードアップ。
;; スピードアップなるか？
(defn ph'' [p h]
 (let [pp (penta p)
       hh (hexa  h)]
   (cond
    (< pp hh) (recur (+ 1 p) h)
    (> pp hh) (recur p (+ 1 h))
    (= pp hh) [p h])))

;(time (ph'' 165 144))
; "Elapsed time: 18.784755 msecs"
; [31977 27693]

;; もう一回、続けて評価すると、インチキなスピードが出る。
;(time (ph'' 165 144))
;"Elapsed time: 4.567639 msecs"
;[31977 27693]